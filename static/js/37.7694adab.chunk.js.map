{"version":3,"sources":["app/categories/categoriesSelectors.js","components/BackofficeSearch/index.js","components/BackofficeCategoryVisualization/BackofficeCategoryVisualization.js"],"names":["selectAllCategories","state","categories","useStyles","makeStyles","wrapper","display","boxShadow","width","margin","padding","borderRadius","input","SearchIcon","justifyContent","alignItems","index","setActivitiesData","dataAPI","name","classes","useState","formInput","setFormInput","toggleNewsAll","setToggleNewsAll","useEffect","getSearch","a","length","Get","then","res","data","getAll","className","InputBase","placeholder","onChange","e","target","value","inputProps","BackofficeCategoryVisualization","setElement","loading","useSelector","status","loader","useSpinner","dispatch","useDispatch","screenWidth","window","innerWidth","page","setPage","rowsPerPage","setRowsPerPage","categoriesData","setCategoriesData","getCategories","Box","sx","Typography","variant","BackofficeSearch","categoriesAPI","Button","size","href","style","backgroundColor","color","startIcon","Grid","item","xs","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","scope","colSpan","TableBody","sort","b","created_at","slice","map","row","format","parseISO","align","textDecoration","to","onClick","id","confirm","deleteCategory","TableFooter","TablePagination","rowsPerPageOptions","label","count","SelectProps","native","onPageChange","event","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/37.7694adab.chunk.js","sourcesContent":["export const selectAllCategories = (state) => state.categories.categories;\n\nexport const selectCategoryById = (state, id) =>\n  state.categories.categories.find((category) => category.id === id);\n","import React, { useEffect, useState } from \"react\";\nimport { InputBase, makeStyles } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    boxShadow: \"0px 0px 3px #aaa\",\n    width: \"60%\",\n    margin: \"40px auto\",\n    padding: \"7px\",\n    borderRadius: \"5px\",\n  },\n  input: {\n    width: \"100%\",\n  },\n  SearchIcon: {\n    width: \"10%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\nconst index = ({ setActivitiesData, dataAPI, name }) => {\n  const classes = useStyles();\n  const [formInput, setFormInput] = useState(\"\");\n  // \"toggleNewsAll\" works as a flag to get all the news only once\n  const [toggleNewsAll, setToggleNewsAll] = useState(false);\n  useEffect(() => {\n    const getSearch = async () => {\n      if (formInput.length >= 3) {\n        await dataAPI.Get(`${name}?search=${formInput}`).then((res) => {\n          setActivitiesData(res.data.data);\n          setToggleNewsAll(false);\n        });\n      } else {\n        if (!toggleNewsAll) {\n          dataAPI.getAll().then((res) => {\n            setActivitiesData(res.data.data);\n            setToggleNewsAll(true);\n          });\n        }\n      }\n    };\n    getSearch();\n  }, [formInput]);\n\n  return (\n    <>\n      <div className={classes.wrapper}>\n        <InputBase\n          placeholder=\"Buscar Categoria...\"\n          onChange={(e) => setFormInput(e.target.value)}\n          inputProps={{ \"aria-label\": \"search\" }}\n          className={classes.input}\n        />\n        <div className={classes.SearchIcon}>\n          <SearchIcon />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default index;\n","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { categoriesAPI } from \"../../api/methods\";\nimport { format, parseISO } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCategories,\n  deleteCategory,\n} from \"../../app/categories/categoriesAsyncActions\";\nimport { selectAllCategories } from \"../../app/categories/categoriesSelectors\";\nimport BackofficeSearch from \"../BackofficeSearch\";\nimport { useSpinner } from \"../../hooks/useSetupSpinner\";\n\nconst BackofficeCategoryVisualization = ({ setElement }) => {\n  const loading = useSelector((state) => state.categories.status);\n  const { loader } = useSpinner();\n  const dispatch = useDispatch();\n  const categories = useSelector(selectAllCategories);\n  const screenWidth = window.innerWidth <= 420;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [categoriesData, setCategoriesData] = useState([]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  useEffect(() => {\n    dispatch(getCategories());\n    setCategoriesData(categories);\n  }, []);\n\n  const handleDeleteCategory = (id) => {\n    //replace this confirm pop up with a Modal\n    if (confirm(\"Eliminar categoría\")) {\n      dispatch(deleteCategory(id));\n    }\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography variant=\"h2\">Categorías</Typography>\n        <BackofficeSearch\n          setActivitiesData={setCategoriesData}\n          dataAPI={categoriesAPI}\n          name=\"categories\"\n        />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          href=\"/backoffice/categories/create\"\n          style={{\n            backgroundColor: \"#9AC9FB\",\n            color: \"#fafafa\",\n          }}\n          startIcon={<AddIcon />}\n        >\n          Crear\n        </Button>\n      </Box>\n      {loading === \"loading\" ? (\n        loader\n      ) : (\n        <Grid item xs={12}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"custom pagination table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell scope=\"row\">Categoría</TableCell>\n                  <TableCell scope=\"row\">Creado</TableCell>\n                  <TableCell scope=\"row\" colSpan={2}>\n                    {\" \"}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {(rowsPerPage > 0\n                  ? [...categoriesData]\n                      .sort((a, b) => (a.created_at < b.created_at ? -1 : 1))\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                  : categoriesData\n                ).map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.name}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {format(parseISO(row.created_at), \"dd/MM/yyyy\")}\n                    </TableCell>\n                    <TableCell style={{ width: 160 }} align=\"center\">\n                      <Link\n                        style={{ textDecoration: \"none\" }}\n                        to={`/backoffice/categories/edit`}\n                        onClick={() => setElement(row)}\n                      >\n                        <Button\n                          variant=\"contained\"\n                          size={screenWidth ? \"small\" : \"medium\"}\n                          onClick={() => {}}\n                          style={{\n                            backgroundColor: \"#59C371\",\n                            color: \"#fafafa\",\n                          }}\n                        >\n                          <EditIcon /> {screenWidth ? \"\" : \"Editar\"}\n                        </Button>\n                      </Link>\n                    </TableCell>\n                    <TableCell style={{ width: 160 }} align=\"center\">\n                      <Button\n                        variant=\"contained\"\n                        size={screenWidth ? \"small\" : \"medium\"}\n                        onClick={() => handleDeleteCategory(row.id)}\n                        style={{\n                          backgroundColor: \"#DB5752\",\n                          color: \"#fafafa\",\n                        }}\n                      >\n                        <DeleteIcon /> {screenWidth ? \"\" : \"Eliminar\"}\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    rowsPerPageOptions={[\n                      5,\n                      10,\n                      25,\n                      { label: \"All\", value: -1 },\n                    ]}\n                    colSpan={3}\n                    count={categories.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    SelectProps={{\n                      inputProps: { \"aria-label\": \"Datos por página\" },\n                      native: true,\n                    }}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default BackofficeCategoryVisualization;\n"],"sourceRoot":""}