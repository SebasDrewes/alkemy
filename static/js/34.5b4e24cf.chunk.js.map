{"version":3,"sources":["utils/SetupAlert.js","components/Activities/Detail/index.js"],"names":["SweetAlert","type","text","Alert","title","Swal","fire","icon","confirmButtonText","ActivityDetail","content","match","spinner","useSpinner","useState","activity","setActivity","error","setError","useEffect","set","params","id","activitiesAPI","getByID","then","res","data","remove","catch","err","mt","loader","variant","name","style","marginTop","ReactHtmlParser","description"],"mappings":"iHAAA,wDAEaA,EAAa,SAACC,EAAMC,GAC/B,OAAQD,GACN,IAAK,UACHE,EAAM,kBAAgBD,GAAQ,qCAC9B,MACF,IAAK,QACHC,EAAM,QAASD,GAAQ,4BACvB,MACF,IAAK,OACHC,EAAM,iBAAeD,GAAQ,8BAMjC,SAASC,EAAMC,EAAOF,GACpBG,IAAKC,KAAK,CACRF,QACAF,OACAK,KAAMN,EACNO,kBAAmB,U,0JCmCVC,UAlDQ,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,MAAOM,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAClCC,EAAUC,cAChB,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OAlBAC,qBAAU,WACRP,EAAQQ,MACJT,EAAMU,OAAOC,IACfC,IACGC,QAAQb,EAAMU,OAAOC,IACrBG,MAAK,SAACC,GACL,IAAQC,EAASD,EAAIC,KAAbA,KACRX,EAAYW,GACZf,EAAQgB,YAETC,OAAM,SAACC,GACNlB,EAAQgB,SACR5B,YAAW,SACXkB,GAAS,QAGd,IAECP,EAAMU,OAAOC,KAAOP,EAEpB,cAAC,IAAD,UACE,eAAC,IAAD,CAAKgB,GAAI,EAAT,WACId,GAASL,EAAQoB,OACnB,cAAC,IAAD,CAAYC,QAAQ,QAApB,SACIhB,EAEE,mEADA,gDASZ,eAAC,IAAD,WACE,cAAC,IAAD,CAAYgB,QAAQ,KAApB,SAA0B7B,GAASW,EAASmB,OAC5C,cAAC,IAAD,CAASC,MAAO,CAAEC,UAAW,WAC7B,cAAC,IAAD,CAAKL,GAAI,EAAT,SACE,cAAC,IAAD,CAAYE,QAAQ,QAApB,SACGvB,GAAW2B,IAAgBtB,EAASuB","file":"static/js/34.5b4e24cf.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\n\nexport const SweetAlert = (type, text) => {\n  switch (type) {\n    case \"success\":\n      Alert(\"Confirmación\", text || \"¡Se ha realizado con Éxito!\");\n      break;\n    case \"error\":\n      Alert(\"Error\", text || \"¡Ocurrió un Error!\");\n      break;\n    case \"info\":\n      Alert(\"Información\", text || \"Información genérica\");\n      break;\n\n    default:\n      break;\n  }\n  function Alert(title, text) {\n    Swal.fire({\n      title,\n      text,\n      icon: type,\n      confirmButtonText: \"OK\",\n    });\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, Box, Divider } from \"@material-ui/core\";\nimport { activitiesAPI } from \"../../../api/methods\";\nimport { useSpinner } from \"../../../hooks/useSetupSpinner\";\nimport { SweetAlert } from \"../../../utils/SetupAlert\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nconst ActivityDetail = ({ title, content, match }) => {\n  const spinner = useSpinner();\n  const [activity, setActivity] = useState();\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    spinner.set();\n    if (match.params.id) {\n      activitiesAPI\n        .getByID(match.params.id)\n        .then((res) => {\n          const { data } = res.data;\n          setActivity(data);\n          spinner.remove();\n        })\n        .catch((err) => {\n          spinner.remove();\n          SweetAlert(\"error\");\n          setError(true);\n        });\n    }\n  }, []);\n\n  if (match.params.id && !activity) {\n    return (\n      <Box>\n        <Box mt={2}>\n          {!error && spinner.loader}\n          <Typography variant=\"body1\">\n            {!error\n              ? \"Aguarde mientras buscamos la actividad\"\n              : \"No pudimos encontrar la actividad, por favor intente nuevamente.\"}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">{title || activity.name}</Typography>\n      <Divider style={{ marginTop: \".5rem\" }} />\n      <Box mt={2}>\n        <Typography variant=\"body1\">\n          {content || ReactHtmlParser(activity.description)}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ActivityDetail;\n"],"sourceRoot":""}