{"version":3,"sources":["utils/SetupAlert.js","components/DisplayTitle/defaultImage.jpg","components/DisplayTitle/DisplayTitle.js","components/Player/Controls.js","components/Player/Player.js","pages/News/index.js"],"names":["SweetAlert","type","text","Alert","title","Swal","fire","icon","confirmButtonText","DisplayTitle","titleText","fontColor","backgroundImg","color","styles","containerStyles","background","defaultImage","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","borderRadius","height","display","justifyContent","alignItems","typography","textShadow","Container","style","Typography","variant","useStyles","makeStyles","controlPlayer","position","bottom","right","left","width","controlProgress","margin","Controls","handlerPlaychange","handleChangeVolume","handlerProgressBar","handlerChangeScreen","state","times","classes","playing","volume","fullScreen","Grid","container","className","item","Slider","onChange","value","currentSeconds","max","totalSeconds","xs","IconButton","onClick","top","border","padding","overflow","zIndex","transition","Player","playerRef","useRef","controlRef","useState","setTimes","setState","Box","onMouseOver","current","visibility","onMouseLeave","ref","onPlay","onPause","onDuration","number","onProgress","time","Math","floor","playedSeconds","url","e","seekTo","wrapper","boxShadow","input","SearchIcon","News","formInput","setFormInput","news","setNews","toggleNewsAll","setToggleNewsAll","useSpinner","set","remove","loader","useEffect","getData","a","newsAPI","getAll","data","length","Get","then","res","InputBase","placeholder","target","inputProps","sx","columns","sm","md","minHeight","map","Card","CardMedia","component","image","alt","name","CardContent","noWrap","align","Divider","to","id","textDecoration","Button","my","fullWidth"],"mappings":"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","file":"static/js/35.5aee66d5.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\n\nexport const SweetAlert = (type, text) => {\n  switch (type) {\n    case \"success\":\n      Alert(\"Confirmación\", text || \"¡Se ha realizado con Éxito!\");\n      break;\n    case \"error\":\n      Alert(\"Error\", text || \"¡Ocurrió un Error!\");\n      break;\n    case \"info\":\n      Alert(\"Información\", text || \"Información genérica\");\n      break;\n\n    default:\n      break;\n  }\n  function Alert(title, text) {\n    Swal.fire({\n      title,\n      text,\n      icon: type,\n      confirmButtonText: \"OK\",\n    });\n  }\n};\n","export default __webpack_public_path__ + \"static/media/defaultImage.d5c88401.jpg\";","import React from \"react\";\nimport defaultImage from \"./defaultImage.jpg\";\nimport { Container, Typography } from \"@material-ui/core\";\n\nconst DisplayTitle = ({ titleText, fontColor, backgroundImg }) => {\n  const image = backgroundImg || defaultImage;\n\n  const color = fontColor || \"black\";\n\n  const styles = {\n    containerStyles: {\n      background: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${image})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      marginTop: \"20px\",\n      borderRadius: \"1em\",\n      color: color,\n      height: \"150px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    typography: {\n      /* fontFamily: \"aracned\", */\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      textShadow: color == \"white\" ? \"0px 0px 3px #222\" : \"none\",\n    },\n  };\n  return (\n    <Container style={styles.containerStyles}>\n      <Typography variant=\"h1\" style={styles.typography}>\n        {titleText}\n      </Typography>\n    </Container>\n  );\n};\n\nexport default DisplayTitle;\n","import PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseArrowIcon from \"@material-ui/icons/Pause\";\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport VolumeMuteIcon from \"@material-ui/icons/VolumeMute\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport FullscreenExit from \"@material-ui/icons/FullscreenExit\";\nimport { IconButton } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Grid, makeStyles, Slider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  color: {\n    color: \"#8DCAFF\",\n  },\n  controlPlayer: {\n    position: \"absolute\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n    height: \"50px\",\n    background: \"#0009\",\n    width: \"100%\",\n  },\n  controlProgress: {\n    position: \"absolute\",\n    bottom: \"0\",\n    right: \"0\",\n    left: \"0\",\n    height: \"45px\",\n    width: \"98%\",\n    margin: \"0px auto\",\n    color: \"rgb(253, 75, 68)\",\n  },\n});\nconst Controls = ({\n  handlerPlaychange,\n  handleChangeVolume,\n  handlerProgressBar,\n  handlerChangeScreen,\n  state,\n  times,\n}) => {\n  const classes = useStyles();\n  const { playing, volume, fullScreen } = state;\n\n  return (\n    <div>\n      {/* CONTROLS */}\n      <Grid container className={classes.controlPlayer}>\n        {/* CONTROLPROGRESS */}\n        <Grid item>\n          <Slider\n            className={classes.controlProgress}\n            onChange={handlerProgressBar}\n            value={times.currentSeconds}\n            max={times.totalSeconds}\n          ></Slider>\n        </Grid>\n        {/* CONTROLPLAY */}\n        <Grid item xs={1}>\n          <IconButton onClick={() => handlerPlaychange()}>\n            {playing ? (\n              <PauseArrowIcon className={classes.color} />\n            ) : (\n              <PlayArrowIcon className={classes.color} />\n            )}\n          </IconButton>\n        </Grid>\n        {/* VOLUME */}\n        <Grid container alignItems=\"center\" xs={6}>\n          <IconButton>\n            {volume >= 0.6 && <VolumeUpIcon className={classes.color} />}\n            {volume < 0.6 && volume > 0.0 && (\n              <VolumeDownIcon className={classes.color} />\n            )}\n            {volume == 0.0 && <VolumeMuteIcon className={classes.color} />}\n          </IconButton>\n          <Slider\n            className={classes.color}\n            style={{ width: \"50px\" }}\n            value={volume * 100}\n            onChange={handleChangeVolume}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n        {/* FULLSCREEN */}\n        <Grid container justifyContent=\"flex-end\" xs={5}>\n          <IconButton onClick={handlerChangeScreen}>\n            {fullScreen ? (\n              <FullscreenExit className={classes.color} />\n            ) : (\n              <FullscreenIcon className={classes.color} />\n            )}\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Controls;\n","import React, { useRef, useState } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport ReactPlayer from \"react-player/youtube\";\nimport Controls from \"./Controls\";\n\nconst useStyles = makeStyles({\n  container: {\n    position: \"relative\",\n    width: \"50%\",\n    height: \"360px\",\n  },\n  fullScreen: {\n    position: \"fixed\",\n    top: \"0px\",\n    left: \"0px\",\n    bottom: \"0px\",\n    right: \"0px\",\n    width: \"100%\",\n    height: \"100%\",\n    border: \"none\",\n    margin: \"0\",\n    padding: \"0\",\n    overflow: \"hidden\",\n    zIndex: \"999999\",\n    background: \"#000\",\n    transition: \"all 300ms\",\n  },\n});\n\nconst Player = () => {\n  const classes = useStyles();\n  const playerRef = useRef();\n  const controlRef = useRef();\n  const [times, setTimes] = useState({\n    totalSeconds: 0,\n    currentSeconds: null,\n  });\n  const [state, setState] = useState({\n    playing: false,\n    fullScreen: false,\n    volume: 0.5,\n  });\n\n  const { playing, volume, fullScreen } = state;\n\n  const handlerPlaychange = () => {\n    setState({ ...state, playing: !state.playing });\n  };\n\n  const handleChangeVolume = (e, value) => {\n    setState({ ...state, volume: value / 100 });\n  };\n\n  const handlerProgressBar = (e, value) => {\n    setTimes({ ...times, currentSeconds: value });\n    playerRef.current.seekTo(value, \"seconds\");\n  };\n\n  const handlerChangeScreen = () => {\n    setState({ ...state, fullScreen: !state.fullScreen });\n  };\n\n  const handlerCurrentTime = (time) => {\n    setTimes({\n      ...times,\n      currentSeconds: Math.floor(time.playedSeconds),\n    });\n  };\n\n  const handlerMouseOver = () => {\n    controlRef.current.style.visibility = \"visible\";\n  };\n  const handlerMouseDown = () => {\n    controlRef.current.style.visibility = \"hidden\";\n  };\n  return (\n    <Box justifyContent=\"center\" display=\"flex\" margin=\"30px 0px\">\n      <div\n        onMouseOver={handlerMouseOver}\n        onMouseLeave={handlerMouseDown}\n        className={fullScreen ? classes.fullScreen : classes.container}\n      >\n        <ReactPlayer\n          ref={playerRef}\n          onPlay={() => {\n            setState({ ...state, playing: true });\n          }}\n          onPause={() => {\n            setState({ ...state, playing: false });\n          }}\n          onDuration={(number) => {\n            setTimes({ ...times, totalSeconds: number });\n          }}\n          onProgress={handlerCurrentTime}\n          playing={playing}\n          volume={volume}\n          width=\"100%\"\n          height=\"100%\"\n          url=\"https://www.youtube.com/watch?v=4YnSk1gI_Oo\"\n        ></ReactPlayer>\n        <div ref={controlRef} style={{ visibility: \"hidden\" }}>\n          <Controls\n            handlerPlaychange={handlerPlaychange}\n            handleChangeVolume={handleChangeVolume}\n            handlerProgressBar={handlerProgressBar}\n            handlerChangeScreen={handlerChangeScreen}\n            state={state}\n            times={times}\n          />\n        </div>\n      </div>\n    </Box>\n  );\n};\nexport default Player;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  InputBase,\n  makeStyles,\n  Typography,\n  Button,\n  Card,\n  CardMedia,\n  CardContent,\n  Divider,\n} from \"@material-ui/core\";\nimport DisplayTitle from \"../../components/DisplayTitle/DisplayTitle\";\nimport { Link } from \"react-router-dom\";\nimport { newsAPI } from \"../../api/methods\";\nimport Player from \"../../components/Player/Player\";\nimport { useSpinner } from \"../../hooks/useSetupSpinner\";\nimport { SweetAlert } from \"../../utils/SetupAlert\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles({\n  wrapper: {\n    display: \"flex\",\n    boxShadow: \"0px 0px 3px #aaa\",\n    width: \"60%\",\n    margin: \"40px auto\",\n    padding: \"7px\",\n    borderRadius: \"5px\",\n    position: \"relative\",\n  },\n  input: {\n    width: \"90%\",\n  },\n  SearchIcon: {\n    width: \"10%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nconst News = () => {\n  const classes = useStyles();\n  const [formInput, setFormInput] = useState(\"\");\n  const [news, setNews] = useState([]);\n  // \"toggleNewsAll\" works as a flag to get all the news only once\n  const [toggleNewsAll, setToggleNewsAll] = useState(false);\n  const { state, set, remove, loader } = useSpinner();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        set();\n        const { data } = await newsAPI.getAll();\n        setNews(data.data);\n        setToggleNewsAll(true);\n      } catch (err) {\n        SweetAlert(\"error\");\n      } finally {\n        remove();\n      }\n    };\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (formInput.length >= 3) {\n      set();\n      newsAPI.Get(`news?search=${formInput}`).then((res) => {\n        setNews(res.data.data);\n        setToggleNewsAll(false);\n        remove();\n      });\n    } else {\n      if (!toggleNewsAll) {\n        set();\n        newsAPI.Get(\"news\").then((res) => {\n          setNews(res.data.data);\n          setToggleNewsAll(true);\n          remove();\n        });\n      }\n    }\n  }, [formInput]);\n\n  return (\n    <Container>\n      <DisplayTitle\n        titleText=\"Novedades\"\n        backgroundImg=\"./images/fotos/Foto3.jpg\"\n        fontColor=\"white\"\n      />\n      <div className={classes.wrapper}>\n        <InputBase\n          placeholder=\"Buscar Novedad...\"\n          onChange={(e) => setFormInput(e.target.value)}\n          inputProps={{ \"aria-label\": \"search\" }}\n          className={classes.input}\n        />\n        <div className={classes.SearchIcon}>\n          <SearchIcon />\n        </div>\n      </div>\n      <Box sx={{ width: \"100%\", margin: \"50px 0px\" }}>\n        {state ? (\n          loader\n        ) : (\n          <Grid\n            container\n            columns={{ xs: 4, sm: 8, md: 12 }}\n            style={{ minHeight: \"70vh\" }}\n            justifyContent=\"center\"\n          >\n            {news.length > 0 ? (\n              news.map((item) => (\n                <Grid item xs={12} sm={6} md={4} key={item.id}>\n                  <Card\n                    style={{\n                      minHeight: \"300px\",\n                      margin: \"30px\",\n                      boxShadow:\n                        \"0px 2px 40px -1px rgb(0 0 0 / 20%), 0px 4px 50px 0px rgb(0 0 0 / 14%), 0px 1px 50px 0px rgb(0 0 0 / 12%)\",\n                    }}\n                  >\n                    <CardMedia\n                      component=\"img\"\n                      height=\"140\"\n                      image={item.image}\n                      alt={item.name}\n                    />\n                    <CardContent>\n                      <Typography noWrap align=\"left\" variant=\"h3\">\n                        {item.name}\n                      </Typography>\n                      <Divider />\n                      <Box marginTop=\"25px\">\n                        <Link\n                          to={`news/${item.id}`}\n                          style={{ textDecoration: \"none\" }}\n                        >\n                          <Button\n                            my={10}\n                            variant=\"contained\"\n                            fullWidth\n                            color=\"primary\"\n                          >\n                            Detalles\n                          </Button>\n                        </Link>\n                      </Box>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))\n            ) : (\n              <Typography variant=\"h3\">\n                No se Encontro Ningun Resultado para{\" \"}\n                <b>&#39;{formInput}&#39;</b>\n              </Typography>\n            )}\n          </Grid>\n        )}\n      </Box>\n      <Typography variant=\"h4\">Último Evento</Typography>\n      <Player />\n    </Container>\n  );\n};\nexport default News;\n"],"sourceRoot":""}